SHELL := /bin/bash

# External dependency
CUSTOM_VHD=../ecc_customize.vhd
ECCPKG_VHD=../ecc_pkg.vhd

# Outfiles
OUT_ASM=ecc_curve_iram.s
OUT_VHD=ecc_curve_iram.vhd
OUT_VHD_ADDR_TMP=ecc_curve_iram_addr.vhd
OUT_ADDR_VHD=ecc_addr.vhd
OUT_DISASS=ecc_curve_iram_disass.s
OUT_VHD_VARS=ecc_vars.vhd
OUT_HEADER_VARS=ecc_vars.h
DBG_STATES_H=ecc_states.h

# Assembly source files
ASM_SRC=asm_src
ASM_LABELS=$(ASM_SRC)/ecc_addr.txt
PFX_SRC_FILES=monty-cst check-on-curve blinding adpa setup double itoh zaddu zaddc subtractP exit eucl-inv cst-time-inv addition ptops zdbl znegc token zremask
ASM_SRC_FILES:=$(addsuffix .s,$(PFX_SRC_FILES))
ASM_SRC_FILES:=$(addprefix $(ASM_SRC)/,$(ASM_SRC_FILES))
ASM_VAR_DEFINITIONS=$(ASM_SRC)/vardefs.csv

.PHONY: asm csv2vhd csv2header dbgstsh

all: asm csv2vhd csv2header dbgstsh

$(OUT_ASM): $(ASM_SRC_FILES)
	@# Create the concatenated ASM program
	@echo "  -> Creating ASM main program $@"
	@cat $^ >| $@
	@# Handle exported labels if necessary
	@if [ -a $(ASM_LABELS) ]; then \
		echo "  -> $(ASM_LABELS) (list of labels to be exported) detected, patching exports in $(OUT_ASM)"; \
		for l in `cat $(ASM_LABELS)`; do \
			regexp="$${l}(:)?(\s*)(#.*)*$$"; \
			sed -E -i "s/$$regexp/$${l}_export\1\2\3/g" $(OUT_ASM); \
		done; \
	fi

# Compile the assembly sources
asm: $(OUT_VHD)
$(OUT_VHD): $(OUT_ASM) $(ECCPKG_VHD) $(CUSTOM_VHD) $(ASM_VAR_DEFINITIONS)
	@#Â Assemble file
	@python3 ipecc_assembler.py -a $^

# Disassemble if asked to
disass: $(OUT_DISASS)
$(OUT_DISASS):	$(OUT_VHD) $(ECCPKG_VHD) $(CUSTOM_VHD) $(ASM_VAR_DEFINITIONS)
	@if [ -a $(OUT_VHD) ]; then \
		python3 ipecc_assembler.py -d $(OUT_VHD) $(ECCPKG_VHD) $(CUSTOM_VHD) $(ASM_VAR_DEFINITIONS); \
	else \
		echo "File $(OUT_VHD) does not exit. Please compile it before trying to disassemble!"; \
	fi

csv2vhd: $(OUT_VHD_VARS)
$(OUT_VHD_VARS): $(ASM_VAR_DEFINITIONS)
	@#Create a VHDL pkg file w/ large nbs defined in vardefs.csv & their address
	@rm -f $@
	@echo "-- -------------------------------------------------------" > $@
	@echo "-- This file is automatically generated through scripting " >> $@
	@echo "-- -------------------------------------------------------" >> $@
	@echo >> $@ ; echo "package ecc_vars is" >> $@ ; echo >> $@
	@grep -v '^#' $< | grep -v '^$$' | tr '[:lower:]' '[:upper:]' \
		| sed -e 's/^\([a-zA-Z0-9]\+\),\([0-9]\+\)/\tconstant LARGE_NB_\1_ADDR: integer := \2;/' >> $@
	@echo >> $@ ; echo "end package;" >> $@

csv2header: $(OUT_HEADER_VARS)
$(OUT_HEADER_VARS): $(ASM_VAR_DEFINITIONS)
	@#Create a C header file equivalent to ecc_vars.vhd
	@rm -f $@
	@echo "/**********************************************************" >$@
	@echo " * This file is automatically generated through scripting *" >> $@
	@echo " **********************************************************/" >> $@
	@echo >> $@
	@echo "#ifndef __ECC_VARS_H__" >> $@
	@echo "#define __ECC_VARS_H__" >> $@
	@echo >> $@
	@grep -v '^#' $< | grep -v '^$$' | tr '[:lower:]' '[:upper:]' \
		| sed -e 's/^\([a-zA-Z0-9]\+\),\([0-9]\+\)/#define IPECC_LARGE_NB_\1_ADDR    \2/' >> $@
	@echo >> $@
	@echo "#endif /* __ECC_VARS_H__ */" >> $@

dbgstsh: $(DBG_STATES_H)
$(DBG_STATES_H): $(ECCPKG_VHD)
	@rm -f $@
	@echo "/**********************************************************" >$@
	@echo " * This file is automatically generated through scripting *" >> $@
	@echo " **********************************************************/" >> $@
	@echo >> $@
	@echo "#ifndef __ECC_STATES_H__" >> $@
	@echo "#define __ECC_STATES_H__" >> $@
	@echo >> $@
	@grep "constant DEBUG_STATE_" $< | sed -e \
		's/[ \t]*constant DEBUG_STATE_\([^ ]\+\) *: *std_logic4 *:= *std_nat(\([0-9]\+\), 4);/#define IPECC_DEBUG_STATE_\1    \2/'>> $@
	@echo >> $@
	@echo "/* Below are macros allowing to get some character" >> $@
	@echo " * string identifying back each of the IDs above." >> $@
	@echo " */" >> $@
	@grep "constant DEBUG_STATE_" $< | sed -e \
		's/[ \t]*constant DEBUG_STATE_\([^ ]\+\) *: *std_logic4 *:= *std_nat(\([0-9]\+\), 4);/#define STR_IPECC_STATE_\2   \"STATE_\1\"/'>> $@
	@echo >> $@
	@echo "#define STR_IPECC_STATE(id) STR_IPECC_STATE_ ## id" >>$@
	@echo >> $@
	@echo "char* str_ipecc_state(unsigned int id)" >> $@
	@echo "{" >>$@
	@echo -e "\tswitch (id) {" >> $@
	@grep "constant DEBUG_STATE_" $< | sed -e \
		's/[ \t]*constant DEBUG_STATE_\([^ ]\+\) *: *std_logic4 *:= *std_nat(\([0-9]\+\), 4);/\t\tcase \2: return \"STATE_\1\"; break;/'>> $@
	@echo -e "\t\tdefault: return \"STATE_UNKNOWN_ERROR\"; break;" >> $@
	@echo -e "\t}" >> $@
	@echo "}" >> $@
	@echo >> $@
	@echo "#endif /* __ECC_STATES_H__ */" >> $@

.PHONY: latex
latex: $(ASM_SRC_FILES)
	@$(MAKE) -s PFX_SRC_FILES="$(PFX_SRC_FILES)" ASM_SRC="$(ASM_SRC)" ASM_VAR_DEFINITIONS="$(ASM_VAR_DEFINITIONS)" -C latex/

clean:
	@rm -f ecc_curve_iram.s
	@rm -f $(OUT_VHD) $(OUT_VHD_ADDR_TMP) $(OUT_ADDR_VHD)
	@rm -f $(OUT_DISASS)
	@rm -f $(OUT_VHD_VARS)
	@make -s -C latex/ clean
	@rm -f $(OUT_HEADER_VARS)
	@rm -f $(DBG_STATES_H)
